{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\33786\\\\Desktop\\\\portfolio\\\\frontend\\\\src\\\\pages\\\\Projects.js\",\n  _s = $RefreshSig$();\n// src/pages/Projects.js\nimport React, { useState } from 'react';\nimport '../styles/Projects.scss';\nimport ProjectModal from '../components/ProjectModal';\n\n// Fake projects data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projectsData = [{\n  title: \"Projet 1\",\n  description: \"Description du projet.\",\n  details: \"Ce projet a été réalisé avec .\"\n}, {\n  title: \"Projet 1\",\n  description: \"Description du projet.\",\n  details: \"Ce projet a été réalisé avec .\"\n}, {\n  title: \"Projet 1\",\n  description: \"Description du projet.\",\n  details: \"Ce projet a été réalisé avec .\"\n}, {\n  title: \"Projet 1\",\n  description: \"Description du projet.\",\n  details: \"Ce projet a été réalisé avec .\"\n}, {\n  title: \"Projet 1\",\n  description: \"Description du projet.\",\n  details: \"Ce projet a été réalisé avec .\"\n}, {\n  title: \"Projet 1\",\n  description: \"Description du projet.\",\n  details: \"Ce projet a été réalisé avec .\"\n}, {\n  title: \"Projet 1\",\n  description: \"Description du projet.\",\n  details: \"Ce projet a été réalisé avec .\"\n}];\nconst Projects = () => {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const openModal = project => {\n    setSelectedProject(project);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setSelectedProject(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mes Projets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-grid\",\n      children: projectsData.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        onClick: () => openModal(project),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectModal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      project: selectedProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"V4/mqZfptzrWy6UNftc0fpL3DkE=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","ProjectModal","jsxDEV","_jsxDEV","projectsData","title","description","details","Projects","_s","modalIsOpen","setModalIsOpen","selectedProject","setSelectedProject","openModal","project","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","isOpen","onRequestClose","_c","$RefreshReg$"],"sources":["C:/Users/33786/Desktop/portfolio/frontend/src/pages/Projects.js"],"sourcesContent":["// src/pages/Projects.js\r\nimport React, { useState } from 'react';\r\nimport '../styles/Projects.scss';\r\nimport ProjectModal from '../components/ProjectModal';\r\n\r\n// Fake projects data\r\nconst projectsData = [\r\n  {\r\n    title: \"Projet 1\",\r\n    description: \"Description du projet.\",\r\n    details: \"Ce projet a été réalisé avec .\"\r\n  },\r\n  {\r\n    title: \"Projet 1\",\r\n    description: \"Description du projet.\",\r\n    details: \"Ce projet a été réalisé avec .\"\r\n  },{\r\n    title: \"Projet 1\",\r\n    description: \"Description du projet.\",\r\n    details: \"Ce projet a été réalisé avec .\"\r\n  },{\r\n    title: \"Projet 1\",\r\n    description: \"Description du projet.\",\r\n    details: \"Ce projet a été réalisé avec .\"\r\n  },{\r\n    title: \"Projet 1\",\r\n    description: \"Description du projet.\",\r\n    details: \"Ce projet a été réalisé avec .\"\r\n  },{\r\n    title: \"Projet 1\",\r\n    description: \"Description du projet.\",\r\n    details: \"Ce projet a été réalisé avec .\"\r\n  },{\r\n    title: \"Projet 1\",\r\n    description: \"Description du projet.\",\r\n    details: \"Ce projet a été réalisé avec .\"\r\n  },\r\n];\r\n\r\nconst Projects = () =>  {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n\r\n  const openModal = (project) => {\r\n    setSelectedProject(project);\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n    setSelectedProject(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects-container\">\r\n      <h2>Mes Projets</h2>\r\n      <div className=\"projects-grid\">\r\n        {projectsData.map((project, index) => (\r\n          <div key={index} className=\"project-card\" onClick={() => openModal(project)}>\r\n            <h3>{project.title}</h3>\r\n            <p>{project.description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <ProjectModal \r\n        isOpen={modalIsOpen} \r\n        onRequestClose={closeModal} \r\n        project={selectedProject} \r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAChC,OAAOC,YAAY,MAAM,4BAA4B;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,CACnB;EACEC,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE,wBAAwB;EACrCC,OAAO,EAAE;AACX,CAAC,EACD;EACEF,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE,wBAAwB;EACrCC,OAAO,EAAE;AACX,CAAC,EAAC;EACAF,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE,wBAAwB;EACrCC,OAAO,EAAE;AACX,CAAC,EAAC;EACAF,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE,wBAAwB;EACrCC,OAAO,EAAE;AACX,CAAC,EAAC;EACAF,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE,wBAAwB;EACrCC,OAAO,EAAE;AACX,CAAC,EAAC;EACAF,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE,wBAAwB;EACrCC,OAAO,EAAE;AACX,CAAC,EAAC;EACAF,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE,wBAAwB;EACrCC,OAAO,EAAE;AACX,CAAC,CACF;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAO;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMc,SAAS,GAAIC,OAAO,IAAK;IAC7BF,kBAAkB,CAACE,OAAO,CAAC;IAC3BJ,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBL,cAAc,CAAC,KAAK,CAAC;IACrBE,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACEV,OAAA;IAAKc,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCf,OAAA;MAAAe,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBnB,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3Bd,YAAY,CAACmB,GAAG,CAAC,CAACR,OAAO,EAAES,KAAK,kBAC/BrB,OAAA;QAAiBc,SAAS,EAAC,cAAc;QAACQ,OAAO,EAAEA,CAAA,KAAMX,SAAS,CAACC,OAAO,CAAE;QAAAG,QAAA,gBAC1Ef,OAAA;UAAAe,QAAA,EAAKH,OAAO,CAACV;QAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBnB,OAAA;UAAAe,QAAA,EAAIH,OAAO,CAACT;QAAW;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFpBE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENnB,OAAA,CAACF,YAAY;MACXyB,MAAM,EAAEhB,WAAY;MACpBiB,cAAc,EAAEX,UAAW;MAC3BD,OAAO,EAAEH;IAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAb,EAAA,CAjCKD,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}