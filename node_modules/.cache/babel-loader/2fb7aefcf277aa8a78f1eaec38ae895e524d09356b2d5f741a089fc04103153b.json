{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\33786\\\\Desktop\\\\portfolio\\\\frontend\\\\src\\\\components\\\\Robot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Robot.scss';\nimport robot from '../images/robot.webp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Robot = () => {\n  _s();\n  const [position, setPosition] = useState({\n    bottom: '80px',\n    right: '20px'\n  });\n\n  // Définir les différentes positions possibles\n  const positions = [{\n    bottom: '80px',\n    right: '20px'\n  }, {\n    bottom: '150px',\n    right: '100px'\n  }, {\n    bottom: '200px',\n    right: '50px'\n  }, {\n    bottom: '100px',\n    right: '200px'\n  }];\n\n  // Fonction pour changer la position aléatoirement\n  const changePosition = () => {\n    const randomIndex = Math.floor(Math.random() * positions.length);\n    setPosition(positions[randomIndex]);\n  };\n\n  // Appeler changePosition au clic sur le robot\n  const handleClick = () => {\n    alert(\"aie\");\n    changePosition();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"robot\",\n    style: {\n      bottom: position.bottom,\n      right: position.right\n    },\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bubble\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: robot,\n        alt: \"Robot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: \"aie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Robot, \"ULVmCkW7w4N1g4xclgpqNk/nU3U=\");\n_c = Robot;\nexport default Robot;\nvar _c;\n$RefreshReg$(_c, \"Robot\");","map":{"version":3,"names":["React","useState","useEffect","robot","jsxDEV","_jsxDEV","Robot","_s","position","setPosition","bottom","right","positions","changePosition","randomIndex","Math","floor","random","length","handleClick","alert","className","style","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/33786/Desktop/portfolio/frontend/src/components/Robot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/Robot.scss';\r\nimport robot from '../images/robot.webp';\r\n\r\nconst Robot = () => {\r\n    const [position, setPosition] = useState({ bottom: '80px', right: '20px' });\r\n\r\n    // Définir les différentes positions possibles\r\n    const positions = [\r\n        { bottom: '80px', right: '20px' },\r\n        { bottom: '150px', right: '100px' },\r\n        { bottom: '200px', right: '50px' },\r\n        { bottom: '100px', right: '200px' },\r\n    ];\r\n\r\n    // Fonction pour changer la position aléatoirement\r\n    const changePosition = () => {\r\n        const randomIndex = Math.floor(Math.random() * positions.length);\r\n        setPosition(positions[randomIndex]);\r\n    };\r\n\r\n    // Appeler changePosition au clic sur le robot\r\n    const handleClick = () => {\r\n        alert(\"aie\");\r\n        changePosition();\r\n    };\r\n\r\n    return (\r\n        <div className=\"robot\" style={{ bottom: position.bottom, right: position.right }} onClick={handleClick}>\r\n            <div className=\"bubble\">\r\n                <img src={robot} alt=\"Robot\" />\r\n            </div>\r\n            <div className=\"message\">aie</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Robot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAC7B,OAAOC,KAAK,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IAAES,MAAM,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,CAAC;;EAE3E;EACA,MAAMC,SAAS,GAAG,CACd;IAAEF,MAAM,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EACjC;IAAED,MAAM,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EACnC;IAAED,MAAM,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAO,CAAC,EAClC;IAAED,MAAM,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,CACtC;;EAED;EACA,MAAME,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,SAAS,CAACM,MAAM,CAAC;IAChET,WAAW,CAACG,SAAS,CAACE,WAAW,CAAC,CAAC;EACvC,CAAC;;EAED;EACA,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACtBC,KAAK,CAAC,KAAK,CAAC;IACZP,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,oBACIR,OAAA;IAAKgB,SAAS,EAAC,OAAO;IAACC,KAAK,EAAE;MAAEZ,MAAM,EAAEF,QAAQ,CAACE,MAAM;MAAEC,KAAK,EAAEH,QAAQ,CAACG;IAAM,CAAE;IAACY,OAAO,EAAEJ,WAAY;IAAAK,QAAA,gBACnGnB,OAAA;MAAKgB,SAAS,EAAC,QAAQ;MAAAG,QAAA,eACnBnB,OAAA;QAAKoB,GAAG,EAAEtB,KAAM;QAACuB,GAAG,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACNzB,OAAA;MAAKgB,SAAS,EAAC,SAAS;MAAAG,QAAA,EAAC;IAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEd,CAAC;AAACvB,EAAA,CA/BID,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}